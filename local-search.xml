<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>指南</title>
    <link href="/post/hello-world.html"/>
    <url>/post/hello-world.html</url>
    
    <content type="html"><![CDATA[<h1 id="欢迎来到我的Blog"><a href="#欢迎来到我的Blog" class="headerlink" title="欢迎来到我的Blog"></a>欢迎来到我的Blog</h1><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    
    <tags>
      
      <tag>指南</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS常用api</title>
    <link href="/post/js.html"/>
    <url>/post/js.html</url>
    
    <content type="html"><![CDATA[<h1 id="JS常用API"><a href="#JS常用API" class="headerlink" title="JS常用API"></a>JS常用API</h1><h2 id="js数组常用方法"><a href="#js数组常用方法" class="headerlink" title="js数组常用方法"></a>js数组常用方法</h2><p><a href="https://github.com/kangqr/kangqr.github.io">https://github.com/kangqr/kangqr.github.io</a></p><p>resource文件—js下</p><h2 id="js对象常用方法"><a href="#js对象常用方法" class="headerlink" title="js对象常用方法"></a>js对象常用方法</h2><p><a href="https://github.com/kangqr/kangqr.github.io">https://github.com/kangqr/kangqr.github.io</a></p><p>resource文件—js下</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <categories>
      
      <category>js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue3基础</title>
    <link href="/post/vue3-1.html"/>
    <url>/post/vue3-1.html</url>
    
    <content type="html"><![CDATA[<h1 id="Vue3-1"><a href="#Vue3-1" class="headerlink" title="Vue3-1"></a>Vue3-1</h1><h2 id="大纲视图"><a href="#大纲视图" class="headerlink" title="大纲视图"></a>大纲视图</h2><p><a href="https://github.com/kangqr/kangqr.github.io">https://github.com/kangqr/kangqr.github.io</a></p><p>resource文件—vue下</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><h4 id="基础问题"><a href="#基础问题" class="headerlink" title="基础问题"></a>基础问题</h4><p>任意4个钩子函数.<br>页面首次加载过程中, 会依次触发的钩子函数.</p><p>Vue实例中的 data 属性, 在哪些钩子中能访问?</p><p>对一个响应式变量赋值, 最好在钩子函数 updated 中.  X</p><p>数据驱动页面是异步还是同步？</p><p>​同步：一条线走到底</p><p>​异步：另开一条线程，去执行，执行完</p><p>​是异步驱动</p><p>在js中，如何定义一个全局变量？</p><p>将变量定义为window对象的属性</p><p>window.strFlag&#x3D;””</p><p>在vue.js中，如何定义一个全局变量？</p><p>将变量定义为当前Vue实例的属性</p><p>在main.js中进行</p><p>vue3：当前vue实例.config.globalProperties.$strFlag&#x3D;””</p><p>vue2：当前vue实例.protoType.strFlag&#x3D;””</p><p>取参数vue实例.$route(not router)</p><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><p>。。。</p><h2 id="父子传值"><a href="#父子传值" class="headerlink" title="父子传值"></a>父子传值</h2><h5 id="父传子defineProps"><a href="#父传子defineProps" class="headerlink" title="父传子defineProps"></a>父传子<code>defineProps</code></h5><p>&#x2F;&#x2F;子组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> childValue=<span class="hljs-title function_">defineProps</span>(<span class="hljs-params">&#123;</span><br><span class="hljs-params">    list(name):<span class="hljs-built_in">Array</span> || <span class="hljs-built_in">String</span> || <span class="hljs-built_in">Object</span> || <span class="hljs-built_in">Number</span></span><br><span class="hljs-params">&#125;</span>)<br>&#123;&#123;childValue.<span class="hljs-property">list</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p>&#x2F;&#x2F;父组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;child :list=<span class="hljs-string">&quot;fatherList&quot;</span>&gt;&lt;/child&gt;<br><span class="hljs-keyword">let</span> fatherList=[]<br></code></pre></td></tr></table></figure><h5 id="子传父defineEmits"><a href="#子传父defineEmits" class="headerlink" title="子传父defineEmits??"></a>子传父<code>defineEmits??</code></h5><p>&#x2F;&#x2F;子组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> childValue=<span class="hljs-title function_">defineEmits</span>(<span class="hljs-string">&quot;name&quot;</span> || [<span class="hljs-string">&quot;name01&quot;</span>,<span class="hljs-string">&quot;name02&quot;</span>])<br><span class="hljs-title function_">childValue</span>(<span class="hljs-string">&quot;name&quot;</span>,[] || <span class="hljs-string">&quot;String&quot;</span> || <span class="hljs-title class_">Number</span>)<br></code></pre></td></tr></table></figure><p>&#x2F;&#x2F;父组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;child @name=<span class="hljs-string">&quot;getValue&quot;</span>&gt;&lt;/child&gt;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getValue</span>(<span class="hljs-params"></span>)&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h5 id="子传父defineExpose"><a href="#子传父defineExpose" class="headerlink" title="子传父defineExpose"></a>子传父<code>defineExpose</code></h5><p>&#x2F;&#x2F;子组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str=<span class="hljs-string">&quot;String&quot;</span><br>definExpose&#123;<br>    str<br>&#125;<br></code></pre></td></tr></table></figure><p>&#x2F;&#x2F;父组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;child ref=<span class="hljs-string">&quot;myValue&quot;</span>&gt;&lt;/child&gt;<br><span class="hljs-keyword">let</span> myValue=<span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>)<br><br>myValue.<span class="hljs-property">value</span>.<span class="hljs-property">str</span><br></code></pre></td></tr></table></figure><h2 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h2><p>对于复杂数据类型，使用堆，直接赋值拷贝，会直接将指向堆中的复杂类型数据的地址赋值给该值，修改数据等于直接修改。</p><p>使用深拷贝，直接重开一个空间存储数据，修改该值不会影响原值</p><p>深拷贝方式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//formCopy、form为Object对象</span><br><span class="hljs-comment">//使用JSON数据转换做深拷贝</span><br>formCopy = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(form))<br></code></pre></td></tr></table></figure><h2 id="防抖和节流"><a href="#防抖和节流" class="headerlink" title="防抖和节流"></a>防抖和节流</h2><h4 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//防抖函数</span><br><span class="hljs-comment">// Debounce (防抖): 每次触发事件时设置延迟调用函数，在此期间取消以前触发的事件.</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleDebounce</span>(<span class="hljs-params">funcFollowIn, numDelayIn</span>) &#123;<br>    <span class="hljs-keyword">let</span> timerInner = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (timerInner) <span class="hljs-built_in">clearTimeout</span>(timerInner);<br>        timerInner = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            funcFollowIn.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, args);<br>        &#125;, numDelayIn);<br>    &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//节流函数</span><br><span class="hljs-comment">// Throttle (节流): 事件占用一个时间段, 在此时间段内不会再接受事件触发.</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleThrottle</span>(<span class="hljs-params">funcFollowIn, numDelayIn</span>) &#123;<br>    <span class="hljs-keyword">let</span> timerInner = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (!timerInner) &#123;<br>            timerInner = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>                funcFollowIn.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, args);<br>                timerInner = <span class="hljs-literal">null</span>;<br>            &#125;, numDelayIn);<br>        &#125;<br>    &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//需要二次封装</span><br><span class="hljs-comment">//防抖函数</span><br><span class="hljs-keyword">const</span> handleSearch = <span class="hljs-title function_">handleDebounce</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;<br> alter（value）<br>&#125;, <span class="hljs-number">1000</span>)<br></code></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <categories>
      
      <category>Vue3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue3</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
